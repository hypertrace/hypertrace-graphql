apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    release: {{ .Release.Name }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.service.adminPort }}"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      {{- toYaml .Values.deploymentSelectorMatchLabels | nindent 6 }}
  template:
    metadata:
      labels:
        {{- toYaml .Values.podLabels | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ include "graphqlservice.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: {{ .Values.service.port }}
          - name: admin-port
            containerPort: {{ .Values.service.adminPort }}
        env:
          - name: SERVICE_NAME
            value: {{ .Chart.Name }}
          - name: BOOTSTRAP_CONFIG_URI
            value: "file:///app/resources/configs"
          - name: LOG4J_CONFIGURATION_FILE
            value: "/app/log/log4j2.properties"
          - name: JAVA_TOOL_OPTIONS
            value: {{ .Values.javaOpts | quote }}
        volumeMounts:
          - name: log4j-config
            mountPath: /app/log
          - name: service-config
            mountPath: /app/resources/configs/{{ .Chart.Name }}/application.conf
            subPath: application.conf
        livenessProbe:
          initialDelaySeconds: {{ int .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ int .Values.livenessProbe.periodSeconds }}
          tcpSocket:
            port: http
        readinessProbe:
          initialDelaySeconds: {{ int .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ int .Values.readinessProbe.periodSeconds }}
          httpGet:
            path: /health
            port: admin-port
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: service-config
        configMap:
          name: {{ .Values.serviceConfig.name }}
      - name: log4j-config
        configMap:
          name: {{ .Values.logConfig.name }}
    {{- with .Values.nodeLabels }}
      nodeSelector:
        {{- toYaml . | nindent 8}}
    {{- end }}
